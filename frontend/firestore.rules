rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isExpert() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'expert';
    }
    
    function isExpertDocument(expertId) {
      return isAuthenticated() && isOwner(expertId);
    }

    // User profiles
    match /users/{userId} {
      // Allow reading user profiles if authenticated
      allow read: if isAuthenticated();
      
      // Allow creating own profile when authenticated
      allow create: if isAuthenticated() && isOwner(userId);
      
      // Allow updating own profile
      allow update: if isAuthenticated() && isOwner(userId);
      
      // Allow deleting own profile
      allow delete: if isAuthenticated() && isOwner(userId);
    }
    
    // Expert profiles
    match /experts/{expertId} {
      // Allow reading expert profiles by anyone
      allow read: if true;
      
      // Allow creating expert profile if authenticated and owner
      allow create: if isAuthenticated() && isOwner(expertId);
      
      // Allow updating own expert profile
      allow update: if isAuthenticated() && isOwner(expertId);
      
      // Allow deleting own expert profile
      allow delete: if isAuthenticated() && isOwner(expertId);
    }
    
    // Consultations
    match /consultations/{consultationId} {
      allow read: if isAuthenticated() && (
        resource.data.clientId == request.auth.uid ||
        resource.data.expertId == request.auth.uid
      );
      
      allow create: if isAuthenticated();
      
      allow update, delete: if isAuthenticated() && (
        resource.data.clientId == request.auth.uid ||
        resource.data.expertId == request.auth.uid
      );
    }
    
    // Messages
    match /messages/{messageId} {
      allow read: if isAuthenticated() && (
        resource.data.senderId == request.auth.uid ||
        resource.data.receiverId == request.auth.uid
      );
      
      allow create: if isAuthenticated();
      
      allow update, delete: if isAuthenticated() && 
        resource.data.senderId == request.auth.uid;
    }
    
    // Reviews
    match /reviews/{reviewId} {
      allow read: if true;
      
      allow create: if isAuthenticated() && 
        request.resource.data.clientId == request.auth.uid;
      
      allow update, delete: if isAuthenticated() && 
        resource.data.clientId == request.auth.uid;
    }
    
    // Settings
    match /settings/{settingId} {
      allow read: if isAuthenticated() && isOwner(settingId);
      allow write: if isAuthenticated() && isOwner(settingId);
    }
  }
}
